name: Build, Publish and Deploy Docker Image

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Variables
        id: get-variables
        run: |
          echo ::set-output name=version::${GITHUB_REF#refs/tags/}
          echo ::set-output name=gh-username-lower::$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')

      - name: Build and push Image
        uses: docker/build-push-action@v5
        with:
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.get-variables.outputs.gh-username-lower }}/libretranslate:${{ env.TAG }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          TAG: ${{ startsWith(github.ref, 'refs/tags/') && steps.get-variables.outputs.version || 'latest' }}

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Build and push Cuda Image
        uses: docker/build-push-action@v5
        with:
          file: ./docker/cuda.Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.get-variables.outputs.gh-username-lower }}/libretranslate:${{ env.TAG }}-cuda
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          TAG: ${{ startsWith(github.ref, 'refs/tags/') && steps.get-variables.outputs.version || 'latest' }}

  deploy:
    needs: main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Deploy na instÃ¢ncia EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "Realizando login no Docker Hub..."
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            echo "ðŸ§¹ Limpando recursos antigos do Docker..."
            docker system prune -af

            echo "ðŸ”§ Verificando a rede 'rede'..."
            docker network inspect rede >/dev/null 2>&1 || docker network create -d bridge rede
            
            echo "ðŸ”„ Pulling new image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/libretranslate:latest

            echo "ðŸ›‘ Stopping and removing old container..."
            docker stop libretranslate || true
            docker rm libretranslate || true

            echo "ðŸš€ Running new container..."
            docker run -d --name libretranslate -p 5000:5000 ${{ secrets.DOCKERHUB_USERNAME }}/libretranslate:latest

            echo "Deploy concluÃ­do com sucesso."
